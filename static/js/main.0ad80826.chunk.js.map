{"version":3,"sources":["common/style/Container.module.css","Timer/TimerScoreboard.module.css","Timer/SetTimerScoreboard.module.css","Timer/Button.module.css","Timer/TimerButtons.module.css","Timer/SetInputValue.module.css","Timer/TimerScoreboard.tsx","Timer/Button.tsx","Timer/TimerButtons.tsx","Timer/Timer.tsx","Timer/SetInputValue.tsx","Timer/SetTimerScoreboard.tsx","Timer/SetTimer.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","TimerScoreboard","props","countClass","count","maxValue","style","disable","className","styleContainer","scoreboard","timerScoreboard","error","editMode","Button","button","onClick","setEditMode","setCount","minDisabledValue","disabled","maxDisabledValue","title","TimerButtons","buttons","increase","reset","value","Timer","container","SetInputValue","inputStyle","type","onChange","e","number","Number","currentTarget","update","SetTimerScoreboard","inputClassName","inputError","setTimerScoreboardContainer","setError","updateMaxValue","updateValue","SetTimer","install","App","useState","setValue","maxSetValue","useEffect","valueString","localStorage","getItem","valueNumber","JSON","parse","countString","countNumber","setItem","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ad80826.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__9Ol1Z\",\"scoreboard\":\"Container_scoreboard__Hh828\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"timerScoreboard\":\"TimerScoreboard_timerScoreboard__2GSw-\",\"disable\":\"TimerScoreboard_disable__3L1Ie\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"setTimerScoreboardContainer\":\"SetTimerScoreboard_setTimerScoreboardContainer__-RjQB\",\"inputError\":\"SetTimerScoreboard_inputError__2XBmZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2nTbY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"TimerButtons_buttons__RAQ4t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputStyle\":\"SetInputValue_inputStyle__1e2Mx\"};","import React from \"react\";\r\nimport style from \"./TimerScoreboard.module.css\"\r\nimport styleContainer from \"../common/style/Container.module.css\"\r\n\r\ntype TimerScoreboardProps = {\r\n    count: number\r\n    value: number\r\n    maxValue: number\r\n    editMode: boolean\r\n    setEditMode: (editMode: boolean) => void\r\n    error: boolean\r\n}\r\n\r\nexport function TimerScoreboard(props: TimerScoreboardProps) {\r\n\r\n\r\n    const countClass = props.count === props.maxValue ? style.disable : \"\"\r\n\r\n    return (\r\n        <div className={`${styleContainer.scoreboard} ${style.timerScoreboard}`}>\r\n            {\r\n                props.error\r\n                    ? <span>error</span>\r\n                    : props.editMode\r\n                    ? <span>settings</span>\r\n                    : <span className={countClass}>{props.count}</span>\r\n            }\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport style from \"./Button.module.css\"\r\n\r\ntype TimerButtonProps = {\r\n    onClick: () => void\r\n    title: string\r\n    minDisabledValue: number\r\n    maxDisabledValue: number\r\n    editMode?: boolean\r\n    setEditMode?: (editMode: boolean) => void\r\n    setCount?: (value: number) => void\r\n    error?: boolean\r\n}\r\n\r\nexport function Button(props: TimerButtonProps) {\r\n\r\n    const onClick = () => {\r\n        props.onClick();\r\n        props.setEditMode && props.setEditMode(false);\r\n        if (props.setCount && props.minDisabledValue) {\r\n            props.setCount(props.minDisabledValue)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={style.button}>\r\n                <button onClick={onClick}\r\n                        disabled={(props.editMode || props.error ||\r\n                            props.maxDisabledValue === props.minDisabledValue)}\r\n                >{props.title}</button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import React from \"react\";\r\nimport {Button} from \"./Button\";\r\nimport style from \"./TimerButtons.module.css\"\r\n\r\ntype ButtonsType = {\r\n    increase: () => void\r\n    reset: () => void\r\n    count: number\r\n    maxValue: number\r\n    value: number\r\n    editMode: boolean\r\n}\r\n\r\nexport function TimerButtons(props: ButtonsType) {\r\n\r\n    const increase = () => props.increase()\r\n    const reset = () => props.reset()\r\n\r\n    return (\r\n        <div className={style.buttons}>\r\n            <Button title=\"inc\"\r\n                    onClick={increase}\r\n                    maxDisabledValue={props.maxValue}\r\n                    minDisabledValue={props.count}\r\n                    editMode={props.editMode}\r\n            />\r\n            <Button title=\"reset\"\r\n                    onClick={reset}\r\n                    maxDisabledValue={props.value}\r\n                    minDisabledValue={props.count}\r\n                    editMode={props.editMode}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\n","import {TimerScoreboard} from \"./TimerScoreboard\";\r\nimport {TimerButtons} from \"./TimerButtons\";\r\nimport React from \"react\";\r\nimport styleContainer from \"../common/style/Container.module.css\"\r\n\r\n\r\ntype TimerPropsType = {\r\n    count: number\r\n    increase: () => void\r\n    reset: () => void\r\n    value: number\r\n    maxValue: number\r\n    editMode: boolean\r\n    setEditMode: (editMode: boolean) => void\r\n    error: boolean\r\n}\r\n\r\nexport function Timer(props: TimerPropsType) {\r\n    return (\r\n        <div className={styleContainer.container}>\r\n            <TimerScoreboard\r\n                count={props.count}\r\n                value={props.value}\r\n                maxValue={props.maxValue}\r\n                setEditMode={props.setEditMode}\r\n                editMode={props.editMode}\r\n                error={props.error}\r\n            />\r\n            <TimerButtons increase={props.increase}\r\n                          reset={props.reset}\r\n                          count={props.count}\r\n                          maxValue={props.maxValue}\r\n                          value={props.value}\r\n                          editMode={props.editMode}/>\r\n        </div>\r\n    )\r\n}","import React, {ChangeEvent} from \"react\";\r\nimport style from \"./SetInputValue.module.css\"\r\n\r\ntype InputValuePropsType = {\r\n    title: string\r\n    value: number\r\n    update: (value: number) => void\r\n    setEditMode: (editMode: boolean) => void\r\n    className: string\r\n}\r\n\r\nexport function SetInputValue(props: InputValuePropsType) {\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let number = Number(e.currentTarget.value)\r\n        props.update(number)\r\n        props.setEditMode(true)\r\n    }\r\n\r\n    return (\r\n        <span className={style.inputStyle}>\r\n            {props.title} <input className={props.className}\r\n                                 type=\"number\"\r\n                                 value={props.value}\r\n                                 onChange={onChangeHandler}\r\n        />\r\n        </span>\r\n    )\r\n}","import React from \"react\";\r\nimport {SetInputValue} from \"./SetInputValue\";\r\nimport style from \"./SetTimerScoreboard.module.css\"\r\nimport styleContainer from \"../common/style/Container.module.css\"\r\n\r\ntype ScoreboardProps = {\r\n    value: number\r\n    maxValue: number\r\n    updateValue: (value: number) => void\r\n    updateMaxValue: (value: number) => void\r\n    setEditMode: (editMode: boolean) => void\r\n    error: boolean\r\n    setError: (error: boolean) => void\r\n}\r\n\r\nexport function SetTimerScoreboard(props: ScoreboardProps) {\r\n\r\n    const inputClassName = `${(props.maxValue <= props.value || props.value < 0 || props.maxValue < 0) ? style.inputError : \"\"}`\r\n\r\n    return (\r\n        <div className={`${styleContainer.scoreboard} ${style.setTimerScoreboardContainer}`}>\r\n            {props.value >= props.maxValue || props.value < 0 || props.maxValue < 0 ? props.setError(true) : props.setError(false)}\r\n\r\n            <SetInputValue title=\"max value: \"\r\n                           value={props.maxValue}\r\n                           update={props.updateMaxValue}\r\n                           setEditMode={props.setEditMode}\r\n                           className={inputClassName}\r\n            />\r\n            <SetInputValue title=\"min value: \"\r\n                           value={props.value}\r\n                           update={props.updateValue}\r\n                           setEditMode={props.setEditMode}\r\n                           className={inputClassName}\r\n            />\r\n        </div>\r\n    );\r\n}","import {SetTimerScoreboard} from \"./SetTimerScoreboard\";\r\nimport React from \"react\";\r\nimport {Button} from \"./Button\";\r\nimport styleContainer from \"../common/style/Container.module.css\"\r\n\r\ntype SetTimerPropsType = {\r\n    value: number\r\n    maxValue: number\r\n    install: () => void\r\n    updateValue: (value: number) => void\r\n    updateMaxValue: (value: number) => void\r\n    setEditMode: (editMode: boolean) => void\r\n    setCount: (value: number) => void\r\n    error: boolean\r\n    setError: (error: boolean)=>void\r\n}\r\n\r\nexport function SetTimer(props: SetTimerPropsType) {\r\n    return (\r\n        <div className={styleContainer.container}>\r\n            <SetTimerScoreboard\r\n                value={props.value}\r\n                maxValue={props.maxValue}\r\n                updateValue={props.updateValue}\r\n                updateMaxValue={props.updateMaxValue}\r\n                setEditMode={props.setEditMode}\r\n                error={props.error}\r\n                setError={props.setError}\r\n            />\r\n            <Button onClick={props.install}\r\n                    title=\"set\"\r\n                    minDisabledValue={props.value}\r\n                    maxDisabledValue={props.maxValue}\r\n                    setEditMode={props.setEditMode}\r\n                    setCount={props.setCount}\r\n                    error={props.error}\r\n            />\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport {Timer} from \"./Timer/Timer\";\nimport {SetTimer} from \"./Timer/SetTimer\";\n\nfunction App() {\n\n    let [value, setValue] = useState<number>(0)//set-timer\n    let [maxValue, maxSetValue] = useState<number>(0)//set-timer\n\n    const Install = () => {//set-timer\n        localStorage.setItem(\"Value\", JSON.stringify(value));\n        localStorage.setItem(\"MaxValue\", JSON.stringify(maxValue));\n    }\n\n    useEffect(() => {//set-timer\n        let valueString = localStorage.getItem(\"Value\")\n        if (valueString) {\n            let valueNumber = JSON.parse(valueString)\n            setValue(valueNumber)\n        }\n    }, [])\n\n    useEffect(() => {//set-timer\n        let valueString = localStorage.getItem(\"MaxValue\")\n        if (valueString) {\n            let valueNumber = JSON.parse(valueString)\n            maxSetValue(valueNumber)\n        }\n    }, [])\n\n    const UpdateValue = (value: number) => {//set-timer\n        setValue(value)\n    }\n    const UpdateMaxValue = (maxValue: number) => {//set-timer\n        maxSetValue(maxValue)\n    }\n\n    let [editMode, setEditMode] = useState<boolean>(false)\n    let [error, setError] = useState<boolean>(false)\n\n    let [count, setCount] = useState<number>(value)//timer\n\n    useEffect(() => {//timer\n        let countString = localStorage.getItem(\"Count\")\n        if (countString) {\n            let countNumber = JSON.parse(countString)\n            setCount(countNumber)\n        }\n    }, [])\n\n    useEffect(() => {//timer\n        localStorage.setItem(\"Count\", JSON.stringify(value));\n    }, [value])\n\n    function increase() {//timer\n        setCount(count + 1);\n    }//timer\n    function reset() {//timer\n        setCount(value);\n    }//timer\n\n    return (\n        <div className=\"App\">\n            <div className=\"setTimer\">\n                <SetTimer value={value}\n                          maxValue={maxValue}\n                          install={Install}\n                          updateValue={UpdateValue}\n                          updateMaxValue={UpdateMaxValue}\n                          setEditMode={setEditMode}\n                          setCount={setCount}\n                          error={error}\n                          setError={setError}\n                />\n            </div>\n            <div className=\"timer\">\n                <Timer\n                    count={count}\n                    increase={increase}\n                    reset={reset}\n                    value={value}\n                    maxValue={maxValue}\n                    editMode={editMode}\n                    setEditMode={setEditMode}\n                    error={error}\n                />\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <React.StrictMode>\n            <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}